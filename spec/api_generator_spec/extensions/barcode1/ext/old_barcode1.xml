<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>

<API>
	<NAME>Barcode</NAME>
	<HELP_OVERVIEW>is used to either navigate to a URL or call a javascript function when an attached card reader decodes data.</HELP_OVERVIEW>
	<MORE_HELP>Only the foreground RhoElements application is given access to the card reader hardware, when an application is sent to the background its state will be saved and it will automatically relinquish control of the card reader.  When brought back to the foreground, an application previously using the card reader will have its previous configuration (eg. pinTimeout) reapplied to the card reader automatically.</MORE_HELP>
	<PROPERTIES> 
	<!-- Property documentation for Help Only -->
		<PARAM>
			<NAME>code128</NAME>
			<VALUES>'Enable' / 'Disable'</VALUES>
			<DESC>Whether or not the Code128 symbology is used.</DESC>
			<DEFAULT>System Defined</DEFAULT>
		</PARAM>
		<!-- And So On -->
	</PROPERTIES>
	<METHODS>
		<METHOD>
			<NAME>getProps</NAME>
			<DESC>This is documentation</DESC>
			<ACCESS>INSTANCE</ACCESS>
			<PARAMS>
				<PARAM>
                    <DESC>Parameters which should be returned</DESC>
					<POSSIBILITY>
						<DESC>The one property that I want to know about</DESC>
						<TYPE>String</TYPE>
					</POSSIBLITY>
					<POSSIBILITY>
						<DESC>List of properties I want to know about</DESC>
						<TYPE>Array of strings</TYPE>
					</POSSIBLITY>
					<POSSIBILITY>
						<DESC>Set of properties I want to know about</DESC>
						<TYPE>Map of strings</TYPE>
					</POSSIBLITY>
					<POSSIBLITY>
						<DESC>All properties</DESC>
						<TYPE>nil</TYPE>
						<DEFAULT>TRUE</DEFAULT>
					</POSSIBLITY>
				</PARAM>
				<PARAM name="callback">
					<DESC>Callback to contain returned property values</DESC>
					<POSSIBILITY>
						<DESC>Function to receive property values</DESC>
						<TYPE>
							<FUNCTION>
								<FUNC_PARAM>
									<DESC>Mapping of property names to Values</DESC>
									<TYPE>Map of Strings</TYPE>
								</FUNC_PARAM>
							</FUNCTION>	
						</TYPE>
					</POSSIBLITY>
					<POSSIBILITY>
						<DESC>URL</DESC>
						<TYPE>String</TYPE>
					</POSSIBLITY>
					<POSSIBILITY>
						<DESC>Synchronous Operation</DESC>
						<TYPE>nil / undefined</TYPE>
					</POSSIBLITY>
				</PARAM>
				<PARAM name="callback_param">
					<DESC>Callback parameter</DESC>
					<POSSIBILITY>
						<DESC>Application specific parameter</DESC>
						<TYPE>String</TYPE>
					</POSSIBLITY>
					<POSSIBILITY>
						<DESC>Synchronous Operation</DESC>
						<TYPE>nil / undefined</TYPE>
					</POSSIBLITY>
				</PARAM>
			</PARAMS>
			<RETURN>
				<DOCUMENTATION>
					Some text that the user can read.  Also note: The actual type returned will depend on what properties the user requested but the generator will just eval() the string returned so does not need to know information on return type.  Marshalled code from C can be used to determine the actual type.  Dmitry to put XML together.
				</DOCUMENTION>
			</RETURN>
		</METHOD>
	</METHODS>
	<USER_OVERVIEW> <!--  More conversational style with INLINE SAMPLES, written in MarkDown -->
		<![CDATA[
	The following example sets up the card reader to call a javascript function upon successful decoding. The javascript
					function will be called 3 times, once with the raw card data, once with just the pan data extracted
					from the raw card data, and once with the encrypted pan data if the pin has been supplied by the
					user within 10s.:</DESC>
				<html><head>

				<script language="javascript" type="text/javascript">
					function doTransaction(data, mode)
					{
						switch(mode) {
						case 'CR':
							alert('Card: '+data);
							break;
						case 'ENCDATA':
							alert('Encoded data: '+data);
							break;
						case 'MESSAGE':
							alert('Error: '+data);
							break;
						case 'PAN':
							alert('PAN data: '+data);
							alert('Please turn the unit over and enter the PIN');
							break;
						}
					}
				</script>
				</head>
				<body>
				</body>
				</html>

				You must have the appropriate drivers installed on your device to use the CardReader.  You will see which drivers are installed in the RhoElements log file after you attempt to use any of the card reader functions in RhoElements.  All necessary drivers should be included as part of the platform for supported devices.

				]]>
				
	</USER_OVERVIEW>	
	<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
	<PLATFORM><!--  This section is used for the supported platform images at the top --></PLATFORM>
	</ADDITIONAL>
</API>
