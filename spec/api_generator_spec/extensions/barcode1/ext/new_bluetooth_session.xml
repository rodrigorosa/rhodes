<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>

<MODULE name="Rho::Bluetooth:Session" access="INSTANCE">
    <HELP_OVERVIEW>is used to either navigate to a URL or call a javascript function when an attached card reader decodes data.</HELP_OVERVIEW>
    <MORE_HELP>Only the foreground RhoElements application is given access to the card reader hardware, when an application is sent to the background its state will be saved and it will automatically relinquish control of the card reader.  When brought back to the foreground, an application previously using the card reader will have its previous configuration (eg. pinTimeout) reapplied to the card reader automatically.</MORE_HELP>

    <TEMPLATES>
    </TEMPLATES>

    <METHODS>
        <METHOD name="setStatusCallback" has_callback="mandatory">
            <DESC>Set the Bluetooth session status callback</DESC>
        </METHOD>

        <METHOD name="disconnect">
            <DESC>Disconnect from the device. .</DESC>
        </METHOD>
        
        <METHOD name="getRemainingDataSize">
            <DESC>Returns the size of the data received by the bluetooth connection (data has not been read or parsed yet); or -1 if error; or 0 if empty (did not receive data)</DESC>
            <RETURN>
                <DESC></DESC>
                <TYPE>Integer</TYPE>
            </RETURN>
        </METHOD>

        <METHOD name="read">
            <DESC>Read data from the connected device</DESC>
            <RETURN>
                <DESC></DESC>
                <TYPE>Array of Bytes</TYPE>
            </RETURN>
        </METHOD>

        <METHOD name="write">
            <DESC>Write data to the connected device</DESC>
            <PARAMS>
                <PARAM name="data">
                    <DESC>The information to write to the connected device</DESC>
                    <TYPE>Array of Bytes</TYPE>
                </PARAM>
            </PARAMS>
        </METHOD>

        <METHOD name="readString">
            <DESC>Read string from the connected device</DESC>
            <RETURN>
                <DESC></DESC>
                <TYPE>String</TYPE>
            </RETURN>
        </METHOD>

        <METHOD name="writeString">
            <DESC>Write string to the connected device</DESC>
            <PARAMS>
                <PARAM name="data">
                    <DESC>The information to write to the connected device</DESC>
                    <TYPE>String</TYPE>
                </PARAM>
            </PARAMS>
        </METHOD>

    </METHODS>
    
    <USER_OVERVIEW>
        <!--  More conversational style with INLINE SAMPLES, written in MarkDown -->
        <![CDATA[
	The following example sets up the card reader to call a javascript function upon successful decoding. The javascript
					function will be called 3 times, once with the raw card data, once with just the pan data extracted
					from the raw card data, and once with the encrypted pan data if the pin has been supplied by the
					user within 10s.:</DESC>
				<html><head>

				<script language="javascript" type="text/javascript">
					function doTransaction(data, mode)
					{
						switch(mode) {
						case 'CR':
							alert('Card: '+data);
							break;
						case 'ENCDATA':
							alert('Encoded data: '+data);
							break;
						case 'MESSAGE':
							alert('Error: '+data);
							break;
						case 'PAN':
							alert('PAN data: '+data);
							alert('Please turn the unit over and enter the PIN');
							break;
						}
					}
				</script>
				</head>
				<body>
				</body>
				</html>

				You must have the appropriate drivers installed on your device to use the CardReader.  You will see which drivers are installed in the RhoElements log file after you attempt to use any of the card reader functions in RhoElements.  All necessary drivers should be included as part of the platform for supported devices.

				]]>

    </USER_OVERVIEW>
    <VER_INTRODUCED>1.0.0</VER_INTRODUCED>
    <PLATFORM>
        <!--  This section is used for the supported platform images at the top -->
    </PLATFORM>
</MODULE>