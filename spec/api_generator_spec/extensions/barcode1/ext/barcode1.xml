<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>

<API>
	<CLASS name="Barcode1">
		<HELP_OVERVIEW>is used to either navigate to a URL or call a javascript function when an attached card reader decodes data.</HELP_OVERVIEW>
		<MORE_HELP>Only the foreground RhoElements application is given access to the card reader hardware, when an application is sent to the background its state will be saved and it will automatically relinquish control of the card reader.  When brought back to the foreground, an application previously using the card reader will have its previous configuration (eg. pinTimeout) reapplied to the card reader automatically.</MORE_HELP>
	    <TEMPLATES>
	    	<SINGLETON_INSTANCES/> <!-- produce enumerate() fabric method, all instances is singletones by ID, add ID property -->
	    	<DEFAULT_INSTANCE/> <!-- object has default static property, all methods can be call by static way (called from default instance), produce default(), set_default() methods -->
	    	<PROPERTY_BAG/> <!-- object has properties, produce getProps(), setProps() methods -->
	    </TEMPLATES>	
		<PROPERTIES> <!-- list of properties supported by property bag methods getPops(), setProps() -->
			<DESC>object supports this properties bla bla bla :</DESC>
			<PROPERTY name="type" type="STRING">
				<DESC>possible value - "hardware"/"software"</DESC>
			</PROPERTY>
			<PROPERTY name="supported_codes" type="ARRAY">
				<DESC>ARRAY of STRING with all supported barcode codes by this recognizer</DESC>
			</PROPERTY>
		</PROPERTIES>	
		<METHODS>
			<METHOD name="recognizeBarcodeOnImage">
				<DESC>recognize barcode in image file or in images pixels array - just example of method</DESC>
				<PARAMS>
					<PARAM>
						<POSSIBILITY name="filepath" type="STRING">
							<DESC>filepath to image</DESC>
						</POSSIBILITY>
						<POSSIBILITY name="imagePixels" type="ARRAY">
 							<DESC>ARRAY of ARRAY of NUMBER - image pixels array, should be a grayscale - number is 0..255 range</DESC>
						</POSSIBILITY>
					</PARAM>
				</PARAMS>
				<RETURN>
					<DESC>
						Some text that the user can read.  Also note: The actual type returned will depend on what properties the user requested but the generator will just eval() the string returned so does not need to know information on return type.  Marshalled code from C can be used to determine the actual type.  Dmitry to put XML together.
					</DESC>
					<POSSIBILITY type="STRING">
						<DESC>recognized code</DESC>
					</POSSIBILITY>	
					<POSSIBILITY type="NIL">
						<DESC>if not any codes was recognized on image</DESC>
					</POSSIBILITY>	
				</RETURN>
			</METHOD>
			<METHOD name="getReccommendedDeviceForCodeType" access="STATIC" fabric="true">
				<DESC>example of static and fabric method - return Barcode1 object</DESC>
				<PARAMS>
					<PARAM name="codetype" type="STRING">
						<DESC>string name of codetype: EPC, EAN, UPC etc.</DESC>
					</PARAM>
				</PARAMS>
				<RETURN>
					<DESC>
						Some text that the user can read.  Also note: The actual type returned will depend on what properties the user requested but the generator will just eval() the string returned so does not need to know information on return type.  Marshalled code from C can be used to determine the actual type.  Dmitry to put XML together.
					</DESC>
					<POSSIBILITY type="Barcode1">
						<DESC>recognizer object recommended for recognize</DESC>
					</POSSIBILITY>	
					<POSSIBILITY type="NIL">
						<DESC>if not any devices can recognized that codetype</DESC>
					</POSSIBILITY>	
				</RETURN>
			</METHOD>	
			<METHOD name="scanBarcode" access="INSTANCE" "run_in_thread"="UI_THREAD">
				<DESC>start scanning barcode - callback when recognize process was finished, also example of UI_THREAD attribute</DESC>
				<PARAMS>
					<PARAM>
						<POSSIBILITY name ="settings" type="HASH">
							<DESC>hash of additional settings for scan</DESC>
						</POSSIBILITY>
						<POSSIBILITY type="NIL">
							<!-- this param can be skipped if NIL not in possibility, then params must be defined from one of possibility alternatives -->
						</POSSIBILITY>	
					</PARAM>
				</PARAMS>
			</METHOD>
		</METHODS>
		<USER_OVERVIEW> <!--  More conversational style with INLINE SAMPLES, written in MarkDown -->
			<![CDATA[
		The following example sets up the card reader to call a javascript function upon successful decoding. The javascript
						function will be called 3 times, once with the raw card data, once with just the pan data extracted
						from the raw card data, and once with the encrypted pan data if the pin has been supplied by the
						user within 10s.:</DESC>
					<html><head>
	
					<script language="javascript" type="text/javascript">
						function doTransaction(data, mode)
						{
							switch(mode) {
							case 'CR':
								alert('Card: '+data);
								break;
							case 'ENCDATA':
								alert('Encoded data: '+data);
								break;
							case 'MESSAGE':
								alert('Error: '+data);
								break;
							case 'PAN':
								alert('PAN data: '+data);
								alert('Please turn the unit over and enter the PIN');
								break;
							}
						}
					</script>
					</head>
					<body>
					</body>
					</html>
	
					You must have the appropriate drivers installed on your device to use the CardReader.  You will see which drivers are installed in the RhoElements log file after you attempt to use any of the card reader functions in RhoElements.  All necessary drivers should be included as part of the platform for supported devices.
	
					]]>
					
		</USER_OVERVIEW>	
		<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
		<PLATFORM><!--  This section is used for the supported platform images at the top --></PLATFORM>
	</CLASS>
</API>
