<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>
<API>
    <MODULE name="NativeMenubar" parent="Rho" generateUnderscoreRubyNames="true">
        <HELP_OVERVIEW>The NativeMenubar API lets you customize the Windows Mobile/CE native menu buttons.</HELP_OVERVIEW>
        <MORE_HELP>
## Enabling the API
This API is part of the `coreapi` extension that is included automatically.
    :::ruby
    extensions: ["coreapi"]

## JavaScript Usage
Be sure to review the [JavaScript API Usage](/guide/api_js) guide for important information about using this API in JavaScript.

## Ruby Usage
Be sure to review the [Ruby API Usage](/guide/api_ruby) guide for important information about using this API in Ruby.
        </MORE_HELP>
        
        <PLATFORM>WM</PLATFORM>

        <TEMPLATES>
        </TEMPLATES>

        <PROPERTIES access="STATIC" generateAccessors="true">
            <PROPERTY name="mainMenu" type="ARRAY">
                <DESC>The Right menu items in Windows Mobile applications. This defines the list of menu choices when the mainButton is pressed.</DESC>
                <PARAM type="HASH">
                    <PARAMS>
                        <PARAM name="label" type="STRING">
                            <DESC>Visible label.</DESC>
                        </PARAM>
                        <PARAM name="action" type="STRING"  rhoAction="true">
                            <DESC>URL to page which will be loaded into tab. It may be path to Ruby controller action; i.e. '/app/Account' would load the Account index action. For ruby callback use 'callback:/app/Account' Or JavaScript method to call: 'javascript: methodOnTab();'. Or path to html page to load.</DESC>
                        </PARAM>
                        <PARAM name="disabled" type="BOOLEAN" default="false">
                            <DESC>Menu item will be displayed as disabled.</DESC>
                            <PLATFORM>WM</PLATFORM>
                        </PARAM>
                    </PARAMS>
                </PARAM>
                <PLATFORM>WM</PLATFORM>
            </PROPERTY>
            <PROPERTY name="extraMenu" type="ARRAY">
                <DESC>The Left menu items for Windows Mobile applications. This defines the list of menu choices when the extraButton is pressed.</DESC>
                <PLATFORM>WM</PLATFORM>
                <PARAM type="HASH">
                    <DESC>Same values as for mainMenu.</DESC>
                </PARAM>
            </PROPERTY>

            <PROPERTY name="mainButton" type="HASH">
                <DESC>Defined behavior of the Right menu button for Windows Mobile applications. This takes the same HASH as a menu item {label: 'Right Button', action: 'javascript: alert("You pressed the right button");'}. If your menu is using menu items via mainMenu, then be sure to not set an action for the mainButton. Setting an action for the mainButton will cause the mainMenu setting to be ignored.</DESC>
                <PLATFORM>WM</PLATFORM>
            </PROPERTY>
            <PROPERTY name="extraButton" type="HASH">
                <DESC>Defined behavior of the Left menu button for Windows Mobile applications. This takes the same HASH as a menu item {label: 'Left Button', action: 'alert("You pressed the left button")'}. If your menu is using menu items via mainMenu, then be sure to not set an action for the extraButton. Setting an action for the extraButton will cause the mainMenu setting to be ignored. </DESC>
                <PLATFORM>WM</PLATFORM>
            </PROPERTY>

            <PROPERTY name="defaultMainMenu" type="ARRAY" readOnly="true" generateAPI="false">
                <PARAM type="HASH" />
                <DESC>This will return what the default right menu should be. This is a read-only property.</DESC>
                <APPLIES rubyOnly="true"/>
                <PLATFORM>WM</PLATFORM>
            </PROPERTY>
        </PROPERTIES>

        <METHODS  access="STATIC">
        </METHODS>

        <VER_INTRODUCED>1.0.0</VER_INTRODUCED>
         <PLATFORM>WM, CE, Win32, Android, iOS, WP8</PLATFORM>
       <REMARKS>
        </REMARKS>
        <EXAMPLES >
           <EXAMPLE title="Customize the extra menu">
            <SECTIONS>

              <SECTION>
               <CODE>
                <RUBY>
                  <![CDATA[
Rho::NativeMenubar.extraButton = {
  :label => "Extra"
}

Rho::NativeMenubar.extraMenu = [
  {
    :label => "Show alert 1",
    :action => url_for(:action => :show_alert_1)
  },
  {
    :label => "Show alert 2",
    :action => url_for(:action => :show_alert_2)
  },
  {
    :label => "Win the lottery",
    :disabled => true
  }
]
                  ]]>
                 </RUBY>
                <JAVASCRIPT>
                  <![CDATA[
Rho.NativeMenubar.extraButton = {
    label: "Extra"
};

Rho.NativeMenubar.extraMenu = [
  {
      label: "Show alert 1",
      action: javascript:show_alert_1();,
  },
  {
      label: "Show alert 2",
      action: javascript:show_alert_2();,
  },
  {
      label: "Win the lottery",
      disabled: true
  }
];
                  ]]>
                 </JAVASCRIPT>
               </CODE>
              </SECTION>
            </SECTIONS>
           </EXAMPLE>
           <EXAMPLE title="Clear the main menu">
            <SECTIONS>
              <SECTION>
               <CODE>
                <RUBY>
                  <![CDATA[
def remove_menuitems
  Rho::NativeMenubar.mainMenu = []
end
                  ]]>
                 </RUBY>
                <JAVASCRIPT>
                  <![CDATA[
function remove_menuitems() {
    Rho.NativeMenubar.mainMenu = [];
}
                  ]]>
                 </JAVASCRIPT>
               </CODE>
              </SECTION>
            </SECTIONS>
           </EXAMPLE>
        </EXAMPLES>
    </MODULE>
</API>