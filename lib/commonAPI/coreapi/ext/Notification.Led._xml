<?xml version = "1.0"?>
<API>
	<MODULE name="Led" parent="Rho.Notification">
		<HELP_OVERVIEW>The LED API is a child of the Notification API and allows access to the LEDs on your device</HELP_OVERVIEW>
		<MORE_HELP>
## Enabling the API           
This API is part of the `coreapi` extension that is included automatically.
    :::ruby
    extensions: ["coreapi"]

### JavaScript Usage
Be sure to review the [JavaScript API Usage](/guide/api_js) guide for important information about using this API in JavaScript

### Ruby Usage
Be sure to review the [Ruby API Usage](/guide/api_ruby) guide for important information about using this API in Ruby

</MORE_HELP>
		<PLATFORM>iOS, Android, WM</PLATFORM>
		<TEMPLATES>
		</TEMPLATES>

		<PROPERTIES generateAccessors="true">
			<DESC></DESC>
			<ALIASES>
			</ALIASES>

			<PROPERTY name="name" type="STRING" readOnly="true">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>Human readable name for the notification object, e.g. 'Green LED'.</DESC>
				<PLATFORM>WM, CE, Android, iOS</PLATFORM>
			</PROPERTY>
			
		</PROPERTIES>

		<METHODS>

            <METHOD name="enumerate" access="STATIC" hasCallback="optional">
                <DESC>Used to return the LEDs present on the device, you can then subsequently illuminate or extinguish them.</DESC>
				<PLATFORM>iOS, Android, WM</PLATFORM>
                <CALLBACK type="ARRAY">
                    <DESC>Array of LED objects, one for each hardware LED on the device.</DESC>
                    <PARAM type="SELF_INSTANCE"/>
                </CALLBACK>
            </METHOD>
		
            <METHOD name="illuminate" hasCallback="none">
                <DESC>Called on an LED object returned from the enumerate method, the specified LED will be illuminated.</DESC>
				<PLATFORM>iOS, Android, WM</PLATFORM>
            </METHOD>
			
            <METHOD name="extinguish" hasCallback="none">
                <DESC>Called on an LED object returned from the enumerate method, the specified LED will be extinguished.</DESC>
				<PLATFORM>iOS, Android, WM</PLATFORM>
            </METHOD>
			
            <METHOD name="flash" hasCallback="none">
                <DESC>Called on an LED object returned from the enumerate method, the specified LED will be flashed.</DESC>
				<PLATFORM>iOS, Android, WM</PLATFORM>
				<PARAMS>
					<PARAM name="propertyMap" type="HASH">
						<DESC>The properties associated with the LED flash.</DESC>
						<PARAMS>
							<PARAM name="onDuration" type="Integer" default="1000">
								<DESC>When flashing, the LED will remain on for this number of milliseconds</DESC>
							</PARAM>
							<PARAM name="offDuration" type="Integer" default="1000">
								<DESC>When flashing, the LED will remain off for this number of milliseconds</DESC>
							</PARAM>
							<PARAM name="numberOfCycles" type="Integer" default="1">
								<DESC>The LED will flash this number of times.</DESC>
							</PARAM>
						</PARAMS>
					</PARAM>
				</PARAMS>
            </METHOD>
			
		</METHODS>
		        <REMARKS>
            <REMARK title="Underlying hardware">
                <DESC>
                    <![CDATA[
					The LED API relies on Symbol drivers on Windows Mobile / CE and therefore will not work on non-Symbol platforms.  Depending on your device configuration, not all LEDs reported by the API may exist physically on the device.
                ]]>

                </DESC>
            </REMARK>
        </REMARKS>
		<EXAMPLES>
           <EXAMPLE title="Flash a specific LED">
            <SECTIONS>
              <SECTION>
               <DESC>
                   Enumerating the LEDs will return an array objects which will map to the real LEDs on the device, using these returned objects you can control the device LEDs
               </DESC>
               <CODE>
                <RUBY>
           <![CDATA[
# ---------------
# controller.rb  
# ---------------
         
def choose_led
  # Obtain list of available leds on the device. 
  $leds = Rho::Notification::Led.enumerate
  render
end

def flash_led
  # receive an integer as parameter, which represents the number of the LED we wish to use
  led = $leds[@params["ledIndex"].to_i]
  led.numberOfCycles = 4
  led.flash({})
end


# ---------------
# choose_led.erb
# ---------------
<ul data-role="listview">
  <% $leds.each_with_index do |led, index| %>
    <li><a href="<%= url_for(:action => :flash_led, :query => {:ledIndex => index}) %>"><%= led.name %></li> 
  <% end %>
</ul>
                   ]]>
                 </RUBY>
               </CODE>
               </SECTION>
               </SECTIONS>
           </EXAMPLE> 
       </EXAMPLES>
	</MODULE>
</API>    